"""initial migration

Revision ID: 006de709a229
Revises: 
Create Date: 2024-10-29 16:48:55.628138

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '006de709a229'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('origin', sa.String(), nullable=False),
    sa.Column('destination', sa.String(), nullable=False),
    sa.Column('cost_per_kg', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('token_blocklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('vehicles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number_plate', sa.String(), nullable=False),
    sa.Column('capacity', sa.Float(), nullable=False),
    sa.Column('driver_name', sa.String(), nullable=False),
    sa.Column('driver_phone', sa.String(), nullable=False),
    sa.Column('departure_time', sa.String(), nullable=True),
    sa.Column('expected_arrival_time', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_vehicles_location_id_locations')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number_plate')
    )
    op.create_table('parcels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('tracking_number', sa.String(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('shipping_cost', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('recipient_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('vehicle_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], name=op.f('fk_parcels_location_id_locations')),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], name=op.f('fk_parcels_recipient_id_users')),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name=op.f('fk_parcels_sender_id_users')),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], name=op.f('fk_parcels_vehicle_id_vehicles')),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tracking_number')
    )
    op.create_table('user_parcel_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('parcel_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parcel_id'], ['parcels.id'], name=op.f('fk_user_parcel_assignments_parcel_id_parcels')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_parcel_assignments_user_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_parcel_assignments')
    op.drop_table('parcels')
    op.drop_table('vehicles')
    op.drop_table('users')
    op.drop_table('token_blocklist')
    op.drop_table('locations')
    # ### end Alembic commands ###
